openapi: 3.0.3
info:
  title: BoraLa API
  version: 1.0.0
  description: O MELHOR HAPPY HOUR DO BRASIL, AQUI NOlogoNav
paths:
  /api/events/:
    get:
      operationId: events_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - events
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: events_create
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailed'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailed'
          description: ''
  /api/events/{event_id}/:
    get:
      operationId: events_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailed'
          description: ''
    put:
      operationId: events_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailed'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailed'
          description: ''
    patch:
      operationId: events_partial_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailed'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailed'
          description: ''
    delete:
      operationId: events_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/events/{event_id}/lineup/:
    get:
      operationId: events_lineup_list
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - events
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLineupList'
          description: ''
    post:
      operationId: events_lineup_create
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lineup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lineup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lineup'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lineup'
          description: ''
  /api/events/{event_id}/lineup/{lineup_id}/:
    get:
      operationId: events_lineup_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: lineup_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineupDetail'
          description: ''
    put:
      operationId: events_lineup_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: lineup_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineupDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LineupDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LineupDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineupDetail'
          description: ''
    patch:
      operationId: events_lineup_partial_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: lineup_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLineupDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLineupDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLineupDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineupDetail'
          description: ''
    delete:
      operationId: events_lineup_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: lineup_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/events/{event_id}/reviews/:
    get:
      operationId: events_reviews_list
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - events
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: events_reviews_create
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
  /api/events/{event_id}/reviews/{review_id}/:
    get:
      operationId: events_reviews_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: review_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
    put:
      operationId: events_reviews_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: review_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
    patch:
      operationId: events_reviews_partial_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: review_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
    delete:
      operationId: events_reviews_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: review_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - events
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/events/closest/:
    get:
      operationId: events_closest_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - events
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
  /api/login/:
    post:
      operationId: login_create
      tags:
      - login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/users/{user_id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        state:
          type: string
          maxLength: 2
        city:
          type: string
          maxLength: 50
        postal_code:
          type: string
          maxLength: 10
        street:
          type: string
          maxLength: 50
        district:
          type: string
          maxLength: 50
        number:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - city
      - district
      - id
      - number
      - state
      - street
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          readOnly: true
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        lineup:
          type: array
          items:
            $ref: '#/components/schemas/Lineup'
          readOnly: true
        title:
          type: string
          maxLength: 100
        date:
          type: string
          format: date
        description:
          type: string
        image_url:
          type: string
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        sponsor:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
          nullable: true
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - address
      - categories
      - date
      - description
      - id
      - lineup
      - title
      - user
    EventDetailed:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        date:
          type: string
          format: date
        description:
          type: string
        price:
          type: number
          format: double
          nullable: true
        sponsor:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        address:
          $ref: '#/components/schemas/Address'
        user_id:
          type: string
          format: uuid
          readOnly: true
        image_url:
          type: string
          nullable: true
      required:
      - address
      - categories
      - date
      - description
      - id
      - title
      - user_id
    Lineup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        hour:
          type: string
          format: time
        description:
          type: string
        price:
          type: number
          format: double
        talent:
          type: string
        is_active:
          type: boolean
        event:
          type: string
          format: uuid
          readOnly: true
      required:
      - description
      - event
      - hour
      - id
      - talent
      - title
    LineupDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        hour:
          type: string
          format: time
        description:
          type: string
        price:
          type: number
          format: double
        talent:
          type: string
        is_active:
          type: boolean
        event:
          type: string
          format: uuid
      required:
      - description
      - event
      - hour
      - id
      - talent
      - title
    PaginatedEventList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedLineupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lineup'
    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedEventDetailed:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        date:
          type: string
          format: date
        description:
          type: string
        price:
          type: number
          format: double
          nullable: true
        sponsor:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        address:
          $ref: '#/components/schemas/Address'
        user_id:
          type: string
          format: uuid
          readOnly: true
        image_url:
          type: string
          nullable: true
    PatchedLineupDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        hour:
          type: string
          format: time
        description:
          type: string
        price:
          type: number
          format: double
        talent:
          type: string
        is_active:
          type: boolean
        event:
          type: string
          format: uuid
    PatchedReviewDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        rating:
          type: integer
          maximum: 5
          minimum: 0
        user:
          allOf:
          - $ref: '#/components/schemas/UserReview'
          readOnly: true
    PatchedUserDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 50
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        password:
          type: string
          writeOnly: true
          maxLength: 255
        is_promoter:
          type: boolean
          readOnly: true
        is_superuser:
          type: boolean
          readOnly: true
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        rating:
          type: integer
          maximum: 5
          minimum: 0
        user:
          allOf:
          - $ref: '#/components/schemas/UserReview'
          readOnly: true
      required:
      - description
      - id
      - rating
      - title
      - user
    ReviewDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        rating:
          type: integer
          maximum: 5
          minimum: 0
        user:
          allOf:
          - $ref: '#/components/schemas/UserReview'
          readOnly: true
      required:
      - description
      - id
      - rating
      - title
      - user
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 50
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        password:
          type: string
          writeOnly: true
          maxLength: 255
        is_promoter:
          type: boolean
        is_superuser:
          type: boolean
          readOnly: true
        cpf:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 11
        cnpj:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 14
      required:
      - email
      - first_name
      - id
      - is_superuser
      - last_name
      - password
      - username
    UserDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 50
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        password:
          type: string
          writeOnly: true
          maxLength: 255
        is_promoter:
          type: boolean
          readOnly: true
        is_superuser:
          type: boolean
          readOnly: true
      required:
      - email
      - first_name
      - id
      - is_promoter
      - is_superuser
      - last_name
      - password
      - username
    UserReview:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 50
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
      required:
      - first_name
      - id
      - last_name
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
